Practice:


BillerControllerImpl:

@RestController
public class BillerControllerImpl implements BillerController {

    @Autowired
    private BillerService billerService;

    @Autowired
    private BillerPromotionService billerPromotionService;

    @ManagedConfiguration
    private WalletPaymentServiceConfiguration walletPaymentServiceConfiguration;

    @Override
    public BillerCategoriesResponse getBillerCategories(int billerCategoryVersion) {
        return billerService.getBillerCategories(billerCategoryVersion);
    }
}
…………………………………..
BillerController:  @RequestMapping("/services/biller-data")
@Tag(name = "BillerController API", description = "APIs to perform Biller data related activities.")
public interface BillerController {

    @GetMapping(value = "/v1/biller/categories", produces = "application/json")
    BillerCategoriesResponse getBillerCategories(@RequestParam(defaultValue = "1") int billerCategoryVersion);

  }
…………………………………..
BillerService:  public interface BillerService {

    BillerCategoriesResponse getBillerCategories(int billerCategoryVersion);
}
…………………………………..
BillerRepository:  @Repository
public interface BillerRepository extends JpaRepository<BillerDO, UUID>, CustomBillerRepository {
    Optional<BillerDO> getByBillerId(UUID billerId);

    Optional<BillerDO> getByProcessorBillerId(String processorBillerId);

    Optional<BillerDO> getByBillerIdAndEnabled(UUID billerId, Boolean enabled);

    Optional<BillerDO> getByProcessorBillerIdAndEnabled(String processorBillerId, Boolean enabled);

    @Query("select distinct b from BillerDO b left join fetch b.subBillers sb " +
            "where b.popularBillerSequenceNumber > 0 " +
            "order by b.popularBillerSequenceNumber")
    List<BillerDO> getPopularBillersAndSubBillers();
}
…………………………………..
BillerCategoriesResponse:  @Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BillerCategoriesResponse {

    private List<BillerCategoryDTO> categories;

    @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss'Z'")
    private Date billerCategoryDataLastUpdatedAt;

}
…………………………………..
BillerCategoryDTO: @Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class BillerCategoryDTO implements Serializable {
    private static final long serialVersionUID = -759311152096064473L;
    private UUID id;
    private String categoryName;
    private String imageUrl;
    private int billerCategoryVersion;
    private Boolean hasEnabledBillers = false;
    private Boolean hasNewBillers = false;
    private List<GetBillerCategoryBillerDTO> billers;
}
…………………………………..
GetBillerCategoryBillerDTO: @Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_EMPTY)
public class GetBillerCategoryBillerDTO implements Serializable {
    private UUID billerId;
    private String processorBillerId;
    private String displayName;
    private String billerType;
    private String imageURL;
    private Boolean isNewBiller;
    private String[] tags;
    private String billerBehaviourCode;
    private Boolean prepaid;
    private String billType;
    private InputType inputType;
    private String inputPlaceholderText;
    private BillTypeValidation billTypeValidation;
    private List<GetBillerCategoryProductBillerDTO> products;
}
…………………………………..
GetBillerCategoryProductBillerDTO:
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
public class GetBillerCategoryProductBillerDTO {
    private UUID billerId;
    private String processorBillerId;
    private String displayName;
    private String billerType;
    private String imageURL;
    private Boolean isNewBiller;
    private String[] tags;
}

…………………………………..
BillerControllerTest:
@ExtendWith(MockitoExtension.class)
class BillerControllerTest {

    @Mock
    private BillerService billerService;

    @Spy
    @InjectMocks
    private BillerControllerImpl billerController;

    @Autowired
    private MockMvc mockMvc;

    @Test
    public void shouldGetBillerCategories() {
        BillerCategoriesResponse mockresponse = new BillerCategoriesResponse();

        when(billerService.getBillerCategories(anyInt())).thenReturn(mockresponse);

        BillerCategoriesResponse response = billerController.getBillerCategories(1);

        assertNotNull(response);
    }

    @Test
    void shouldGetBillerCategories_WithData() {
        GetBillerCategoryBillerDTO biller = GetBillerCategoryBillerDTO.builder()
                .billerId(UUID.randomUUID())
                .processorBillerId("999988")
                .displayName("Bait")
                .billerType("Internet y Tiempo aire")
                .imageURL("https://cashi.walmart.com/Providers-Icons/PNG_NEW/Bait_080923.png")
                .isNewBiller(false)
                .tags(new String[]{"Bait", "Recarga celular"})
                .build();

        BillerCategoryDTO category = BillerCategoryDTO.builder()
                .id(UUID.randomUUID())
                .categoryName("Recarga celular")
                .imageUrl("https://cashi.walmart.com/Providers-SVG-FIXED/Biller-Categories-2/telephone.svg")
                .billerCategoryVersion(1)
                .hasEnabledBillers(true)
                .hasNewBillers(false)
                .billers(Arrays.asList(biller))
                .build();

        BillerCategoriesResponse billerCategoriesResponse = BillerCategoriesResponse.builder()
                .categories(Arrays.asList(category))
                .billerCategoryDataLastUpdatedAt(new Date())
                .build();

        when(billerService.getBillerCategories(anyInt())).thenReturn(billerCategoriesResponse);

        BillerCategoriesResponse response = billerController.getBillerCategories(1);

        assertEquals("Recarga celular", response.getCategories().get(0).getCategoryName());
        assertEquals(true, response.getCategories().get(0).getHasEnabledBillers());
    }
}
…………………………………..
BillerControllerAllTest: 
@ExtendWith(MockitoExtension.class)
public class BillerControllerAllTest {

    @Mock
    private BillerService billerService;

    @Mock
    private BillerPromotionService billerPromotionService;

    @InjectMocks
    private BillerControllerImpl billerController;

    @Mock
    private WalletPaymentServiceConfiguration walletPaymentServiceConfiguration;

    private MockMvc mockMvc;
    private ObjectMapper objectMapper;


    @BeforeEach
    public void setup() {
        mockMvc = MockMvcBuilders.standaloneSetup(billerController).build();
        objectMapper = new ObjectMapper();
    }

    @Test
    public void shouldTest_GetBillerCategories() throws Exception {

        mockMvc.perform(MockMvcRequestBuilders.get("/services/biller-data/v1/biller/categories")
                        .param("billerCategoryVersion", "1")
                        .accept(MediaType.APPLICATION_JSON))
                .andExpect(MockMvcResultMatchers.status().isOk());
                //.andExpect(jsonPath("$.categories[0].categoryName", is("Recarga celular")));

        verify(billerService).getBillerCategories(1);
    }
}

…………………………………..
…………………………………..
…………………………………..
package com.walmart.subscription.ca.cronjobs.integrationTest;

import com.walmart.subscription.ca.domain.aspect.exceptions.BuyNowException;
import com.walmart.subscription.ca.domain.common.config.CXOConfig;
import com.walmart.subscription.ca.domain.common.constants.CaSubscriptionConstants;
import com.walmart.subscription.ca.domain.common.constants.UserSubCustomAttrConstants;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.assertNull;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.doReturn;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

import com.walmart.kafka.producer.KafkaDRProducer;
import com.walmart.subscription.ca.cronjobs.service.impl.RenewalJobServiceImpl;
import com.walmart.subscription.ca.domain.adapter.caspr.CasprServiceAdapter;
import com.walmart.subscription.ca.domain.adapter.cxo.CXOServiceAdapter;
import com.walmart.subscription.ca.domain.adapter.geolocation.GeoLocationServiceAdapter;
import com.walmart.subscription.ca.domain.common.config.WalmartPassConfig;
import com.walmart.subscription.ca.domain.common.exception.CaSubscriptionErrorCodes;
import com.walmart.subscription.ca.domain.enums.OrderStatus;
import com.walmart.subscription.ca.domain.handler.impl.WPCommsMessageEventHandlerImpl;
import com.walmart.subscription.ca.domain.model.GeoLocationResponse;
import com.walmart.subscription.ca.domain.model.caspr.AccessPoint;
import com.walmart.subscription.ca.domain.model.caspr.CasprEligibilityResponse;
import com.walmart.subscription.ca.domain.model.caspr.CasprEligibiltyReq;
import com.walmart.subscription.ca.domain.model.cxo.request.BuyNowRequest;
import com.walmart.subscription.ca.domain.model.cxo.response.BuyNowResponse;
import com.walmart.subscription.ca.domain.model.query.RenewalJobConfig;
import com.walmart.subscription.ca.domain.persistence.impl.RenewalSubscriptionRepoExtension;
import com.walmart.subscription.ca.domain.publisher.service.SubscriptionEventKafkaPublisher;
import com.walmart.subscription.ca.domain.service.WPSubscriptionBatchService;
import com.walmart.subscription.ca.domain.service.WalmartPassQueryService;
import com.walmart.subscription.common.constants.Const;
import com.walmart.subscription.common.enums.BatchStatus;
import com.walmart.subscription.common.enums.SubscriptionStatus;
import com.walmart.subscription.common.enums.SubscriptionTenant;
import com.walmart.subscription.common.exception.SubscriptionErrorCodes;
import com.walmart.subscription.common.exception.SubscriptionException;
import com.walmart.subscription.common.util.JsonConvertorUtil;
import com.walmart.subscription.domain.aggregate.SubscriptionPurchaseAggregate;
import com.walmart.subscription.domain.entities.ExpirySubscription;
import com.walmart.subscription.domain.entities.RenewalSubscription;
import com.walmart.subscription.domain.entities.SubscriptionPlan;
import com.walmart.subscription.domain.entities.UserSubscription;
import com.walmart.subscription.domain.entities.UserSubscriptionHistory;
import com.walmart.subscription.domain.model.payment.PaymentStatus;
import com.walmart.subscription.domain.model.usersubscription.PaymentDetail;
import com.walmart.subscription.domain.model.usersubscription.UserRenewalConfig;
import com.walmart.subscription.domain.persistence.ExpirySubscriptionRepository;
import com.walmart.subscription.domain.persistence.RenewalSubscriptionRepository;
import com.walmart.subscription.domain.persistence.SubscriptionPlanRepository;
import com.walmart.subscription.domain.persistence.UserSubscriptionHistoryRepository;
import com.walmart.subscription.domain.persistence.UserSubscriptionRepository;
import com.walmart.subscription.domain.singleprofile.model.UserFullProfile;
import com.walmart.subscription.infra.singleprofile.services.GetProfileDetailsService;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;
import java.util.concurrent.CompletableFuture;
import org.checkerframework.checker.units.qual.C;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.ActiveProfiles;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@ActiveProfiles("test")
@SpringBootTest
@ExtendWith(MockitoExtension.class)
public class RenewalPurchaseIT {

  private static final String INTEGRATION_TEST_FLOW = "IntegrationTestFlow";

  private static final String CLIENT_ERROR = "clientError";

  private static final String SERVER_ERROR = "serverError";


  static {
    System.setProperty(INTEGRATION_TEST_FLOW, String.valueOf(true));
  }


  @MockBean
  RenewalSubscriptionRepoExtension renewalSubscriptionRepoExtension;

  @MockBean
  RenewalSubscriptionRepository renewalSubscriptionRepository;

  @MockBean
  WalmartPassQueryService walmartPassQueryService;

  @MockBean
  CasprServiceAdapter casprServiceAdapter;

  @MockBean
  UserSubscriptionRepository userSubscriptionRepository;

  @MockBean
  SubscriptionEventKafkaPublisher subscriptionEventKafkaPublisher;

  @MockBean
  UserSubscriptionHistoryRepository userSubscriptionHistoryRepository;

  @MockBean
  GetProfileDetailsService getProfileDetailsService;

  @MockBean
  GeoLocationServiceAdapter geoLocationServiceAdapter;

  @MockBean
  CXOServiceAdapter cxoServiceAdapter;

  @MockBean
  ExpirySubscriptionRepository expirySubscriptionRepository;

  @MockBean
  KafkaDRProducer subscriptionEventsProducer;

  @MockBean
  WalmartPassConfig walmartPassConfig;

  @MockBean
  SubscriptionPlanRepository subscriptionPlanRepository;

  @MockBean
  WPCommsMessageEventHandlerImpl commsMessageEventHandler;

  @MockBean
  CXOConfig cxoConfig;

  @Autowired
  WPSubscriptionBatchService wpSubscriptionBatchService;


  private List<RenewalSubscription> renewalSubscriptionList;

  private RenewalSubscription renewalSubscriptionScheduled;

  private UserSubscription userSubscription;

  private SubscriptionPlan subscriptionPlan;

  private UserSubscription userSubscriptionDeactivated;

  private UserSubscription userSubscriptionNew;

  private ExpirySubscription expirySubscription;

  private UserFullProfile userFullProfile;

  private GeoLocationResponse geoLocationResponse;

  private CasprEligibilityResponse casprEligibilityResponse;

  private BuyNowResponse buyNowResponse;

  private UserSubscription successEndUserSubscription;

  private UserSubscription newUserSubscriptionDeactivated;


  @Autowired
  RenewalJobServiceImpl renewalJobServiceImpl;

  @BeforeEach
  public void setup() throws Exception {

    System.setProperty(INTEGRATION_TEST_FLOW, String.valueOf(false));

    renewalSubscriptionList = getRenewalData();

    renewalSubscriptionScheduled = getRenewalSubscriptionScheduled();

    userSubscription = getUserSubscription();

    subscriptionPlan = getSubscriptionPlan();

    userSubscriptionDeactivated = getUserSubscriptionDeactivated(userSubscription);

    userSubscriptionNew = getuserSubscriptionNew(userSubscription);

    expirySubscription = getExpirySubscription(userSubscription);

    userFullProfile = getSPSResponse();

    geoLocationResponse = getGeoLocationResponse();

    casprEligibilityResponse = getcasprEligibilityResponse();

    buyNowResponse = getBuyNowResponse();

    successEndUserSubscription = getEndUserActivatedAndOrderPlaced();


    newUserSubscriptionDeactivated = getUserNewSubscriptionDeactivated();

    when(commsMessageEventHandler.handleCommsEventMessage(any())).thenReturn(Mono.just(Boolean.TRUE));

    when(subscriptionPlanRepository.get(any())).thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(mock(UserSubscriptionHistory.class)));

    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(mock(UserSubscription.class)));
    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscriptionList.get(0))));

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

  }

  @Test
  public void renewalSuccessFirstTry() throws Exception {


    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew))
        .thenReturn(CompletableFuture.completedFuture(successEndUserSubscription));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call

    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #5

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //15.mock cxoService call
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.completedFuture(buyNowResponse));

    //16.mock update User Subscription - DB call - through


    // 17.mock History Event DB create
    UserSubscriptionHistory userSubscriptionHistoryMock = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistoryMock));


    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();

    userSubscriptionNew = successEndUserSubscription;

    assertNotNull(mockResponse);
    assertNotNull(mockResponse.getSubscriptionPlan());
    assertNotNull(mockResponse.getUserSubscription());
    assertEquals(userSubscription.getUserId(), mockResponse.getUserSubscription().getUserId());
    assertEquals(userSubscriptionNew.getSubscriptionId(), mockResponse.getUserSubscription().getSubscriptionId());
    assertEquals(userSubscription.getUserRenewalConfig().getPlanId(), mockResponse.getSubscriptionPlan().getPlanId());
    assertEquals(userSubscription.getUserRenewalConfig().getRenewalDate().get(),
        mockResponse.getUserSubscription().getTermStartDate());
    assertEquals(mockResponse.getUserSubscription().getSubscriptionStatus(), SubscriptionStatus.ACTIVE);
    assertEquals(mockResponse.getUserSubscription().getTermStartDate(), LocalDate.now());
    assertEquals(mockResponse.getUserSubscription().getPaymentDetails().get().getCardId(),
        userSubscription.getPaymentDetails().get().getCardId());
    assertEquals(mockResponse.getUserSubscription().getUserRenewalConfig().getRenewalDate().get(),
        LocalDate.now().plusDays(31));

  }

  @Test
  public void renewalSuccessNotFirstTry() throws Exception {


    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscriptionScheduled);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionScheduled));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated))
        .thenReturn(CompletableFuture.completedFuture(successEndUserSubscription));

    //5. Mock WalmartPass Config Call for max retry;

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // 6. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 7. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 8.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 9.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //10.mock cxoService call
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.completedFuture(buyNowResponse));

    //11.mock update User Subscription - DB call -through #4


    // 12.mock History Event DB create
    UserSubscriptionHistory userSubscriptionHistoryMock = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistoryMock));


    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();
    userSubscriptionNew = successEndUserSubscription;
    assertNotNull(mockResponse);
    assertNotNull(mockResponse.getSubscriptionPlan());
    assertNotNull(mockResponse.getUserSubscription());
    assertEquals(userSubscriptionNew.getUserId(), mockResponse.getUserSubscription().getUserId());
    assertEquals(userSubscriptionNew.getSubscriptionId(), mockResponse.getUserSubscription().getSubscriptionId());
    assertEquals(userSubscriptionNew.getUserRenewalConfig().getPlanId(),
        mockResponse.getSubscriptionPlan().getPlanId());
    assertEquals(LocalDate.now(), mockResponse.getUserSubscription().getTermStartDate());
    assertEquals(mockResponse.getUserSubscription().getSubscriptionStatus(), SubscriptionStatus.ACTIVE);
    assertEquals(mockResponse.getUserSubscription().getTermStartDate(), LocalDate.now());
    assertEquals(mockResponse.getUserSubscription().getPaymentDetails().get().getCardId(),
        userSubscriptionNew.getPaymentDetails().get().getCardId());
    assertEquals(mockResponse.getUserSubscription().getUserRenewalConfig().getRenewalDate().get(),
        LocalDate.now().plusDays(31));


  }


  @Test
  public void RenewalFailureLastTry() throws Exception {

    RenewalSubscription renewalSubscription = RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now().minusDays(7))
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId(userSubscription.getSubscriptionId())
        .planId("910000010030")
        .batchStatus(BatchStatus.SCHEDULED)
        .etag(UUID.randomUUID().toString())
        .build();

    // 3. Mock User Subscription DB Call for specific User
    Map<String, String> customAttributesNew = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesNew.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, "7");
    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesNew)
        .build();

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));

    // 4. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    //5 Mock WalmartConfig Call
    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    //6. Mock Renewal Table DB call to fetch

    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscription)));

    // 7. Mock Renewal Table to Update
    RenewalSubscription renewalSubscriptionUpdated = RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now().minusDays(7))
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId(userSubscription.getSubscriptionId())
        .planId("910000010030")
        .batchStatus(BatchStatus.INVALID)
        .etag(UUID.randomUUID().toString())
        .build();
    when(renewalSubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(renewalSubscriptionUpdated));

    //8. Mock Create Histoty Event
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionHistory));

    //9 Mock Publish on Kafka
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any()))
        .thenReturn(Mono.just(object));


    // 10.Mock User Subscription Update

    HashMap<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_FAILURE_REASON, "Failure Reason");
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .paymentDetail(PaymentDetail
            .builder(userSubscriptionNew.getPaymentDetails().get())
            .paymentStatus(PaymentStatus.FAILED)
            .build())
        .customAttributes(customAttributesUpdated)
        .subscriptionStatus(SubscriptionStatus.INACTIVE)
        .build();

    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.SUBSCRIPTION_NOT_ELIGIBLE_FOR_RENEWAL;
    executeAndVerify(renewalSubscription, (CaSubscriptionErrorCodes) error, CLIENT_ERROR);

  }

  @Test
  public void CARD_EXPIRED_RetryExhausted() throws Exception {


    Map<String, String> customAttributesLastRetry = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesLastRetry.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, "7");

    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesLastRetry)
        .build();

    userFullProfile.getCards().get(0).setExpired(true);

    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscriptionScheduled);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionScheduled));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated));

    //5. Mock WalmartPass Config Call for max retry;

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // 6. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 7. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 8.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 9.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //10.mock cxoService call
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.completedFuture(buyNowResponse));

    //11.mock update User Subscription - DB call -through #4


    // 12.mock History Event DB create
    UserSubscriptionHistory userSubscriptionHistoryMock = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistoryMock));

    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscriptionScheduled)));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.CARD_EXPIRED;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }

  @Test
  public void CHANGE_CARD_REQUESTED_AndRenewalRetryExhausted() throws Exception {

    RenewalSubscription renewalSubscription = RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now())
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId(UUID.randomUUID().toString())
        .planId("910000010030")
        .batchStatus(BatchStatus.SCHEDULED)
        .etag(UUID.randomUUID().toString())
        .build();
    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscription);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscription));

    // 3. Mock User Subscription DB Call for specific User
    Map<String, String> customAttributesCardChangeRequested = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesCardChangeRequested.put(UserSubCustomAttrConstants.CHANGE_CARD_REQUESTED, "yes");
    customAttributesCardChangeRequested.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, "7");
    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesCardChangeRequested)
        .build();
    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));

    //4. subscription table db call
    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();

    Map<String, String> customAttributesDeactivated = new HashMap<>(userSubscriptionUpdated.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_FAILURE_REASON, "Failure Reason");
    UserSubscription userSubscriptionDeactivatedRetryExhausted = UserSubscription
        .builder(userSubscriptionUpdated)
        .paymentDetail(PaymentDetail
            .builder(userSubscriptionUpdated.getPaymentDetails().get())
            .paymentStatus(PaymentStatus.FAILED)
            .build())
        .customAttributes(customAttributesDeactivated)
        .subscriptionStatus(SubscriptionStatus.INACTIVE)
        .build();

    doReturn(CompletableFuture.completedFuture(userSubscriptionUpdated),
        CompletableFuture.completedFuture(userSubscriptionDeactivatedRetryExhausted))
        .when(userSubscriptionRepository).updateSubscription(any());


    //5. Mock WalmartPassConfig for max retry count
    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    //6. Mock Renewal Table DB call to fetch

    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscription)));

    // 7. Mock Renewal Table to Update
    RenewalSubscription renewalSubscriptionUpdated = RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now().minusDays(7))
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId(userSubscription.getSubscriptionId())
        .planId("910000010030")
        .batchStatus(BatchStatus.INVALID)
        .etag(UUID.randomUUID().toString())
        .build();
    when(renewalSubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(renewalSubscriptionUpdated));

    //8. Mock Create Histoty Event
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionHistory));

    //9 Mock Publish on Kafka
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any()))
        .thenReturn(Mono.just(object));

    // 10 Update UserSubscription - through 4


    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();

    assertNotNull(mockResponse);
    assertNull(mockResponse.getUserSubscription());
    assertNull(mockResponse.getSubscriptionPlan());
  }

  @Test
  public void renewalFailure_SUBSCRIPTION_NOT_ELIGIBLE_FOR_RENEWAL() throws Exception {
    UserRenewalConfig userRenewalConfig = UserRenewalConfig.withRenewalConfigurationForRenewDisabled();

    userSubscriptionDeactivated = UserSubscription
        .builder(userSubscriptionDeactivated)
        .userRenewalConfig(userRenewalConfig)
        .build();

    // 1. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 2. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 3. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated));

    // 4. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 5. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 6. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 7. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

//    // 8. Mock Create new User DB call
//
//    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
//        CompletableFuture.completedFuture(userSubscriptionNew));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.SUBSCRIPTION_NOT_ELIGIBLE_FOR_RENEWAL;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }

  @Test
  public void renewalFailure_SUBSCRIPTION_ORDER_PLACED_OrderPlaced() throws Exception {


    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscriptionScheduled);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionScheduled));

    // 3. Mock User Subscription DB Call for specific User

    Map<String, String> customAttributesOrderPlaced = new Hashtable<>(userSubscriptionNew.getCustomAttributes());
    customAttributesOrderPlaced.put(UserSubCustomAttrConstants.ORDER_STATUS, OrderStatus.ORDER_PLACED.name());
    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesOrderPlaced)
        .build();

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated));

    //5. Mock WalmartPass Config Call for max retry;

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // 6. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.SUBSCRIPTION_ORDER_PLACED;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }


  @Test
  public void renewalFailure_SUBSCRIPTION_ORDER_PLACED_OrderSuccess() throws Exception {


    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscriptionScheduled);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionScheduled));

    // 3. Mock User Subscription DB Call for specific User

    Map<String, String> customAttributesOrderPlaced = new Hashtable<>(userSubscriptionNew.getCustomAttributes());
    customAttributesOrderPlaced.put(UserSubCustomAttrConstants.ORDER_STATUS, OrderStatus.ORDER_SUCCESS.name());
    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesOrderPlaced)
        .build();

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated));

    //5. Mock WalmartPass Config Call for max retry;

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // 6. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.SUBSCRIPTION_ORDER_PLACED;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }

  @Test
  public void renewalFailure_INVALID_SINGLE_PROFILE_USER_ID() throws Exception {

    UserFullProfile userFullProfile = mock(UserFullProfile.class);
    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated));


    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call

    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    when(userFullProfile.getStatus()).thenReturn(Const.SINGLE_PROFILE_ERROR_STATUS);


    SubscriptionErrorCodes error = SubscriptionErrorCodes.INVALID_SINGLE_PROFILE_USER_ID;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);


  }

  @Test
  public void renewalFailure_CARD_ID_NOT_PRESENT_IN_USER_PROFILE() throws Exception {

    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .paymentDetail(PaymentDetail
            .builder(userSubscriptionNew.getPaymentDetails().get())
            .cardId(UUID.randomUUID().toString())
            .build())
        .build();
    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call

    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscriptionList.get(0))));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.CARD_ID_NOT_PRESENT_IN_USER_PROFILE;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);


  }

  @Test
  public void renewalFailure_CARD_EXPIRED() throws Exception {

    userFullProfile.getCards().get(0).setExpired(true);
    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.CARD_EXPIRED;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);


  }

  @Test
  public void renewalFailure_DELIVERY_ADDRESS_NOT_FOUND_IN_USER_PROFILE() throws Exception {


    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated))
    ;

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    Map<String, String> customAttributesRandomAddressID = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesRandomAddressID.put("address_id", UUID.randomUUID().toString());
    userSubscriptionNew = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesRandomAddressID)
        .build();
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.DELIVERY_ADDRESS_NOT_FOUND_IN_USER_PROFILE;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);


  }

  @Test
  public void renewalFailure_GEO_LOCATION_RESPONSE_ERROR() throws Exception {


    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.error(new RuntimeException()));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.GEO_LOCATION_RESPONSE_ERROR;
    executeAndVerify(renewalSubscriptionList.get(0), error, SERVER_ERROR);

  }

  @Test
  public void renewalFailure_ADDRESS_IS_NOT_ELIGIBLE_FOR_DELIVERY() throws Exception {


    List<AccessPoint> accessPointList = new ArrayList<>();
    casprEligibilityResponse.getPayload().setAccessPointList(accessPointList);

    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated))
    ;

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //<-------handle failure------>
    when(subscriptionPlanRepository.get(any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    //History table through #8
    // kafka call through #9

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // Update User Subscription with Reason

    //Email service
    when(commsMessageEventHandler.handleCommsEventMessage(any())).thenReturn(Mono.just(Boolean.TRUE));


    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.ADDRESS_IS_NOT_ELIGIBLE_FOR_DELIVERY;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }

  @Test
  public void renewalFailure_CASPR_SERVICE_ELIGIBILITY_RESPONSE_ERROR() throws Exception {


    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated))
    ;

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    doReturn(Mono.error(new RuntimeException())).when(casprServiceAdapter)
        .getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.CASPR_SERVICE_ELIGIBILITY_RESPONSE_ERROR;
    executeAndVerify(renewalSubscriptionList.get(0), error, SERVER_ERROR);

  }

  @Test
  public void renewalFailure_ERROR_CALLING_BUY_NOW_StatusNotOk() throws Exception {

    buyNowResponse.setStatus("not_Ok");
    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated))
    ;

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //15.mock cxoService call
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.completedFuture(buyNowResponse));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.ERROR_CALLING_BUY_NOW;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }

  @Test
  public void renewalSuccess_SoftDecline() throws Exception {

    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //15.mock cxoService call
//    BuyNowResponse buyNowResponse1 = 400.CHECKOUT_SERVICE.IPAE03
    List<String> list = Collections.singletonList("400.CHECKOUT_SERVICE.IPAE03");

    when(cxoConfig.getBuyNowSoftDeclineCodes()).thenReturn(list);

    BuyNowResponse buyNowResponse1 = getBuyNowSampleErrorResponse();

    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.failedFuture(new BuyNowException(buyNowResponse1)));

    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();
    assertNotNull(mockResponse);

  }


  @Test
  public void renewalSuccess_SoftDeclineRetryExhausted() throws Exception {

    Map<String,String> customAttributesMaxRetry = userSubscriptionNew.getCustomAttributes();
    customAttributesMaxRetry.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT,"6");
      userSubscriptionNew = UserSubscription
          .builder(userSubscriptionNew)
          .customAttributes(customAttributesMaxRetry)
          .build();
    // 1. Mock Renewal Table DB call
    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.just(renewalSubscriptionScheduled);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    // 2. Mock Renewal Table DB call to schedule
    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionScheduled));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionNew));


    // 4. Mock User Subscription DB call to update Existing User
    Map<String, String> customAttributesUpdated = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    customAttributesUpdated.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, Integer.toString(
        (Integer.parseInt(
            userSubscriptionNew.getCustomAttributes().get(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT)) + 1))
    );
    UserSubscription userSubscriptionUpdated = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributesUpdated)
        .build();
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionUpdated))
        .thenReturn(CompletableFuture.completedFuture(newUserSubscriptionDeactivated));

    //5. Mock WalmartPass Config Call for max retry;

    when(walmartPassConfig.getRenewalMaxRetryLimit()).thenReturn(7);

    // 6. Mock Subscription Plan DB call For new Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 7. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 8.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 9.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //10.mock cxoService call
    List<String> list = Collections.singletonList("400.CHECKOUT_SERVICE.IPAE03");

    when(cxoConfig.getBuyNowSoftDeclineCodes()).thenReturn(list);

    BuyNowResponse buyNowResponse1 = getBuyNowSampleErrorResponse();
    //src/test/resources/test_response/BuyNowSampleErrorResponse.json
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.failedFuture(new BuyNowException(buyNowResponse1)));

    //11.mock update User Subscription - DB call -through #4


    // 12.mock History Event DB create
    UserSubscriptionHistory userSubscriptionHistoryMock = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistoryMock));

    when(renewalSubscriptionRepository.fetchAllRenewalSubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(getRandomDummyRenewalSubscription(renewalSubscriptionScheduled)));


    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();
    assertNotNull(mockResponse);

  }


  @Test
  public void renewalFailure_HardDecline() throws Exception {

    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User and the Update new user to cardChange requested
    Map<String, String> customAttributes = userSubscriptionNew.getCustomAttributes();
    customAttributes.put(UserSubCustomAttrConstants.CHANGE_CARD_REQUESTED, "yes");

    UserSubscription userSubscriptionCardChange = UserSubscription
        .builder(userSubscriptionNew)
        .customAttributes(customAttributes)
        .build();

    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionCardChange));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //15.mock cxoService call
//    BuyNowResponse buyNowResponse1 = 400.CHECKOUT_SERVICE.IPAE03
    List<String> list = Collections.singletonList("400.CHECKOUT_SERVICE.RANDOM");

    when(cxoConfig.getBuyNowSoftDeclineCodes()).thenReturn(list);

    BuyNowResponse buyNowResponse1 = getBuyNowSampleErrorResponse();
    //src/test/resources/test_response/BuyNowSampleErrorResponse.json
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.failedFuture(new BuyNowException(buyNowResponse1)));


    SubscriptionPurchaseAggregate mockResponse =
        renewalJobServiceImpl.renewal(buildRenewalConfig()).blockFirst();
    assertNotNull(mockResponse);

  }

  @Test
  public void renewalFailure_ERROR_CALLING_BUY_NOW() throws Exception {

    // 1. Mock Renewal Table DB call

    Flux<RenewalSubscription> renewalSubscriptionFlux = Flux.fromIterable(renewalSubscriptionList);

    doReturn(renewalSubscriptionFlux).when(renewalSubscriptionRepoExtension)
        .getRenewalSubscriptionsCustomQuery(any(List.class), any(List.class), any(Integer.class));

    when(renewalSubscriptionRepoExtension.scheduleRenewalSubscription(any()))
        .thenReturn(Mono.just(renewalSubscriptionList.get(0)));

    // 3. Mock User Subscription DB Call for specific User

    when(userSubscriptionRepository.fetchActiveSubscriptionById(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscription));

    // 4. Mock Subscription Plan DB call
    //  (i). For new Subscription . (ii). For Old Subscription

    when(walmartPassQueryService.getSubscriptionPlan(any(), any()))
        .thenReturn(CompletableFuture.completedFuture(subscriptionPlan));

    // 5. User Subscription DB call to Deactivate the Existing User
    when(userSubscriptionRepository.updateSubscription(any()))
        .thenReturn(CompletableFuture.completedFuture(userSubscriptionDeactivated));

    // 6. Expiry Table DB call
    when(expirySubscriptionRepository.fetchAllExpirySubscriptionByDate(any()))
        .thenReturn(CompletableFuture.completedFuture(Collections.singletonList(expirySubscription)));

    // 7. Mock Update Expiry Subscription DB call
    ExpirySubscription expirySubscriptionMock = mock(ExpirySubscription.class);
    when(expirySubscriptionRepository
        .update(any())).thenReturn(CompletableFuture.completedFuture(expirySubscriptionMock));

    // 8. Mock ExpiryHistory Event DB call
    UserSubscriptionHistory userSubscriptionHistory = mock(UserSubscriptionHistory.class);
    when(userSubscriptionHistoryRepository.create(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionHistory));

    // 9. Mock Kafka Publishing
    Object object = mock(Object.class);
    when(subscriptionEventKafkaPublisher.sendSubscriptionEvent(any())).thenReturn(Mono.just(object));

    // 10. Mock Create new User DB call
    when(userSubscriptionRepository.createUserSubscription(any())).thenReturn(
        CompletableFuture.completedFuture(userSubscriptionNew));

    // 11. Mock Subscription Plan DB call - through #4

    // 12. Mock SPS Service Call

    when(getProfileDetailsService.getFullProfileDetails(any())).thenReturn(
        CompletableFuture.completedFuture(userFullProfile));

    // 13.mock geolocation-Service call
    when(geoLocationServiceAdapter.getGeoLocationWithRetry(any())).thenReturn(
        Mono.just(geoLocationResponse));

    // 14.mock casprService call
    when(casprServiceAdapter.getServiceEligibilityWithRetry(any(CasprEligibiltyReq.class))).thenReturn(
        Mono.just(casprEligibilityResponse));

    //15.mock cxoService call
    when(cxoServiceAdapter.buyNow(any(BuyNowRequest.class), any(String.class), any(Boolean.class),
        any(Boolean.class), any(), any())).thenReturn(CompletableFuture.failedFuture(new RuntimeException()));

    CaSubscriptionErrorCodes error = CaSubscriptionErrorCodes.ERROR_CALLING_BUY_NOW;
    executeAndVerify(renewalSubscriptionList.get(0), error, CLIENT_ERROR);

  }


  private void executeAndVerify(RenewalSubscription renewalSubscription, CaSubscriptionErrorCodes error,
                                String errorType) {
    Exception exception = null;
    SubscriptionPurchaseAggregate mockResponse = null;
    try {
      mockResponse =
          wpSubscriptionBatchService.renew(renewalSubscription, false).block();
    } catch (Exception e) {
      exception = e;
    }
    assertNull(mockResponse);
    assertNotNull(exception);
    assert (exception instanceof SubscriptionException);
    SubscriptionException subscriptionException = (SubscriptionException) exception;
    assertTrue(Objects.equals(errorType, SERVER_ERROR) ?
        subscriptionException.getSubscriptionError().getHttpStatus().is5xxServerError()
        : subscriptionException.getSubscriptionError().getHttpStatus().is4xxClientError());
    assertEquals(error.getErrorCode(), subscriptionException.getSubscriptionError().getErrorCode());
    assertEquals(error.getErrorMessage(), subscriptionException.getSubscriptionError().getErrorMessage());
  }

  private void executeAndVerify(RenewalSubscription renewalSubscription, SubscriptionErrorCodes error,
                                String errorType) {
    Exception exception = null;
    SubscriptionPurchaseAggregate mockResponse = null;
    try {
      mockResponse =
          wpSubscriptionBatchService.renew(renewalSubscription, false).block();
    } catch (Exception e) {
      exception = e;
    }
    assertNull(mockResponse);
    assertNotNull(exception);
    assert (exception instanceof SubscriptionException);
    SubscriptionException subscriptionException = (SubscriptionException) exception;
    assertTrue(Objects.equals(errorType, SERVER_ERROR) ?
        subscriptionException.getSubscriptionError().getHttpStatus().is5xxServerError()
        : subscriptionException.getSubscriptionError().getHttpStatus().is4xxClientError());
    assertEquals(error.getErrorCode(), subscriptionException.getSubscriptionError().getErrorCode());
    assertEquals(error.getErrorMessage(), subscriptionException.getSubscriptionError().getErrorMessage());
  }

  public List<RenewalSubscription> getRenewalData() {
    RenewalSubscription renewalSubscription = RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now())
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId("936709a8-5954-4db2-9bbc-15b7e8f0dd79")
        .planId("910000010030")
        .batchStatus(null)
        .etag(UUID.randomUUID().toString())
        .build();
    return Collections.singletonList(renewalSubscription);

  }

  private RenewalSubscription getRenewalSubscriptionScheduled() {
    return RenewalSubscription
        .builder()
        .tenantId(SubscriptionTenant.CANADA)
        .renewalDate(LocalDate.now())
        .userId("4c8ab353-bd43-499a-84f5-40f33bea4497")
        .subscriptionId("936709a8-5954-4db2-9bbc-15b7e8f0dd79")
        .planId("910000010030")
        .batchStatus(BatchStatus.SCHEDULED)
        .etag(UUID.randomUUID().toString())
        .build();
  }

  public UserFullProfile getSPSResponse() throws Exception {
    String UserFullProfile_Filepath = "src/test/resources/test_response_IT/userFullProfile.json";
    return JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(UserFullProfile_Filepath)), UserFullProfile.class);
  }

  public GeoLocationResponse getGeoLocationResponse() throws Exception {
    return GeoLocationResponse.builder().longitude("long").latitude("lat").postalCode("postal-code").build();
  }

  public CasprEligibilityResponse getcasprEligibilityResponse() throws Exception {
    String caspr_response_Filepath = "src/test/resources/test_response_IT/caspr_response.json";
    return JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(caspr_response_Filepath)), CasprEligibilityResponse.class);
  }

  public BuyNowResponse getBuyNowResponse() throws Exception {
    String cxo_response_Filepath = "src/test/resources/test_response_IT/BuyNowSampleResponse.json";
    return JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(cxo_response_Filepath)), BuyNowResponse.class);
  }

  public UserSubscription getUserSubscription() throws Exception {
    String userSubscriptionFilePath = "src/test/resources/test_response_IT/userSubscription.json";
    UserSubscription userSubscriptionFromJson = JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(userSubscriptionFilePath)),
            UserSubscription.class);
    return UserSubscription
        .builder(userSubscriptionFromJson)
        .termStartDate(LocalDate.now().minusDays(31))
        .termEndDate(LocalDate.now().minusDays(1))
        .userRenewalConfig(
            UserRenewalConfig
                .builder()
                .autoRenew(true)
                .planId(userSubscriptionFromJson.getPlanId())
                .renewalDate(LocalDate.now())
                .build()
        )
        .build();

  }

  public SubscriptionPlan getSubscriptionPlan() throws Exception {

    String subscriptionPlanFilepath = "src/test/resources/test_response_IT/subscriptionPlanMonthly.json";
    return JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(subscriptionPlanFilepath)),
            SubscriptionPlan.class);
  }

  public UserSubscription getUserSubscriptionDeactivated(UserSubscription userSubscription) {
    return
        UserSubscription
            .builder(userSubscription)
            .subscriptionStatus(SubscriptionStatus.INACTIVE)
            .build();
  }

  public UserSubscription getuserSubscriptionNew(UserSubscription userSubscription) {

    Map<String, String> customAttributesNew = new HashMap<>(userSubscription.getCustomAttributes());
    customAttributesNew.put(UserSubCustomAttrConstants.PREVIOUS_USER_SUBSCRIPTION_ID,
        userSubscription.getSubscriptionId());
    customAttributesNew.put(UserSubCustomAttrConstants.RENEWAL_RETRY_COUNT, "1");
    customAttributesNew.put(UserSubCustomAttrConstants.ORDER_STATUS, OrderStatus.TO_BE_PLACED.toString());
    customAttributesNew.put(UserSubCustomAttrConstants.PREVIOUS_RENEWAL_DATE,
        userSubscription.getRenewalDate().get().format(
            DateTimeFormatter.ISO_DATE));
    customAttributesNew.put(UserSubCustomAttrConstants.ADDRESS_ID,
        userSubscription.getCustomAttributes().get(UserSubCustomAttrConstants.ADDRESS_ID));
    customAttributesNew.put(UserSubCustomAttrConstants.REGION,
        userSubscription.getCustomAttributes().get(UserSubCustomAttrConstants.REGION));


    return UserSubscription
        .builder(userSubscription)
        .subscriptionStatus(SubscriptionStatus.ACTIVE)
        .subscriptionId(UUID.randomUUID().toString())
        .paymentDetail(PaymentDetail.builder(userSubscription.getPaymentDetails().get())
            .paymentStatus(PaymentStatus.PROCESS_PENDING).build())
        .termStartDate(LocalDate.now())
        .termEndDate(LocalDate.now().plusDays(30))
        .createdTs(LocalDateTime.now())
        .termStartTs(LocalDateTime.now())
        .termEndTs(LocalDateTime.now().plusDays(30))
        .userRenewalConfig(UserRenewalConfig
            .builder()
            .autoRenew(true)
            .renewalDate(LocalDate.now().plusDays(31))
            .planId(userSubscription.getPlanId())
            .build())
        .customAttributes(customAttributesNew)
        .build();
  }

  private UserSubscription getUserNewSubscriptionDeactivated(){


    Map<String, String> customAttributesNew = new HashMap<>(userSubscriptionNew.getCustomAttributes());

    customAttributesNew.put(UserSubCustomAttrConstants.RENEWAL_FAILURE_REASON, "reason");

    return UserSubscription
        .builder(userSubscriptionNew)
        .subscriptionStatus(SubscriptionStatus.INACTIVE)
        .subscriptionId(UUID.randomUUID().toString())
        .paymentDetail(PaymentDetail.builder(userSubscription.getPaymentDetails().get())
            .paymentStatus(PaymentStatus.FAILED).build())
        .termStartDate(LocalDate.now())
        .termEndDate(LocalDate.now())
        .termEndTs(LocalDateTime.now())
        .customAttributes(customAttributesNew)
        .build();

  }

  private UserSubscription getEndUserActivatedAndOrderPlaced() {

    Map<String, String> additionalCustomAttributes = new HashMap<>(userSubscriptionNew.getCustomAttributes());
    additionalCustomAttributes.put(UserSubCustomAttrConstants.ORDER_STATUS, OrderStatus.ORDER_PLACED.toString());
    additionalCustomAttributes.put(UserSubCustomAttrConstants.ORDER_ID,
        buyNowResponse.getOrders().get(0).getOrderId());

    return UserSubscription
        .builder(userSubscriptionNew)
        .paymentDetail(PaymentDetail
            .builder()
            .cardId(userSubscriptionNew.getCardId().get())
            .paymentMethod(CaSubscriptionConstants.PAYMENT_METHOD_CARD)
            .paymentRequestId(CaSubscriptionConstants.NOT_REQUIRED)
            .paymentStatus(PaymentStatus.PROCESS_PENDING)
            .paymentDate(LocalDate.now())
            .amount(subscriptionPlan.getPlanPriceAmount())
            .build()
        )
        .customAttributes(additionalCustomAttributes)
        .build();
  }

  public ExpirySubscription getExpirySubscription(UserSubscription userSubscription) {
    return ExpirySubscription
        .builder()
        .batchStatus(null)
        .tenantId(SubscriptionTenant.CANADA)
        .expiryDate(LocalDate.now())
        .userId(userSubscription.getUserId())
        .subscriptionId(userSubscription.getSubscriptionId())
        .build();
  }

  public RenewalJobConfig buildRenewalConfig() {
    return RenewalJobConfig
        .builder()
        .batchCount(1)
        .tenantIds(Arrays.asList(SubscriptionTenant.CANADA.name()))
        .build();
  }

  public List<RenewalSubscription> getRandomDummyRenewalSubscription(RenewalSubscription renewalSubscription) {
    List<RenewalSubscription> renewalSubscriptions = new ArrayList<>();
    for (int i = 0; i < 20; i++) {
      renewalSubscriptions.add(
          RenewalSubscription
              .builder()
              .tenantId(SubscriptionTenant.CANADA)
              .renewalDate(LocalDate.now())
              .userId(UUID.randomUUID().toString())
              .subscriptionId(UUID.randomUUID().toString())
              .planId("910000010030")
              .batchStatus(null)
              .etag(UUID.randomUUID().toString())
              .build()
      );
    }
    renewalSubscriptions.add(renewalSubscription);
    Collections.shuffle(renewalSubscriptions);
    return renewalSubscriptions;
  }

  public BuyNowResponse getBuyNowSampleErrorResponse() throws Exception {

    String subscriptionPlanFilepath = "src/test/resources/test_response_IT/BuyNowSampleErrorResponse.json";
    return JsonConvertorUtil.getObjectMapperInstance()
        .readValue(Files.readAllBytes(Paths.get(subscriptionPlanFilepath)),
            BuyNowResponse.class);
  }

  // After 1st try Success
// After 7th try Expiry
// CHANGE_CARD_REQUESTED_AndRenewalRetryExhausted

//Errors
  //SUBSCRIPTION_NOT_ELIGIBLE_FOR_RENEWAL_subscriptionInactive_validationError
  //SUBSCRIPTION_ORDER_PLACED
  //INVALID_SINGLE_PROFILE_USER_ID
  //PAYMENT_DETAILS_NOT_FOUND
  //CARD_ID_NOT_PRESENT_IN_USER_PROFILE
  //CARD_EXPIRED
  //DELIVERY_ADDRESS_NOT_FOUND_IN_USER_PROFILE
  //GEO_LOCATION_RESPONSE_ERROR
  //ADDRESS_IS_NOT_ELIGIBLE_FOR_DELIVERY
  //CASPR_SERVICE_ELIGIBILITY_RESPONSE_ERROR
  //ERROR_CALLING_BUY_NOW


}

